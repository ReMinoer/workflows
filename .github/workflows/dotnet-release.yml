name: dotnet / Release
on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: "['windows-latest', 'ubuntu-latest', 'macos-latest']"
      solution_file:
        required: false
        type: string
        default: ''
      project_folder:
        required: true
        type: string
      target_framework:
        required: true
        type: string
      zip_prefix:
        required: true
        type: string
      configuration:
        required: false
        type: string
        default: Release
      dotnet_version:
        required: false
        type: string
        default: ''
    secrets:
      token:
        required: false
defaults:
  run:
    shell: bash
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_ARGUMENTS: --nologo -c ${{ inputs.configuration }}
  PUBLISH_FOLDER: ${{ inputs.project_folder }}/bin/${{ inputs.configuration }}/${{ inputs.target_framework }}/publish
jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ${{ fromJSON(input.os) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.token || github.token }}
    - name: Parse Tag
      uses: dawidd6/action-get-tag@v1
      id: tag
    - name: Install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet_version }}
    - name: Restore
      run: dotnet restore ${{ inputs.solution_file }}
    - name: Build
      run: dotnet build ${{ inputs.solution_file }} --no-restore $DOTNET_ARGUMENTS -p:Version=${{ steps.tag.outputs.tag }}
    - name: Test
      run: dotnet test ${{ inputs.solution_file }} --no-build $DOTNET_ARGUMENTS
    - name: Publish
      run: dotnet publish ${{ inputs.project_folder }} -f ${{ inputs.target_framework }} --no-build $DOTNET_ARGUMENTS
    - name: Zip
      uses: thedoctor0/zip-release@master
      with:
        filename: '${{ inputs.zip_prefix }}-${{ runner.os }}-${{ steps.tag.outputs.tag }}.zip'
        directory: '${{ env.PUBLISH_FOLDER }}'
    - name: Release
      uses: alexellis/upload-assets@0.4.0
      with:
        asset_paths: '["${{ env.PUBLISH_FOLDER }}/${{ inputs.zip_prefix }}-${{ runner.os }}-${{ steps.tag.outputs.tag }}.zip"]'
      env:
        GITHUB_TOKEN: ${{ github.token }}
