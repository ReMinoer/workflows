name: dotnet / Nuget
on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      solution_file:
        required: false
        type: string
        default: ''
      sources_folder:
        required: true
        type: string
      configuration:
        required: false
        type: string
        default: Release
      dotnet_version:
        required: false
        type: string
        default: ''
    secrets:
      token:
        required: false
      nuget_token:
        required: true
defaults:
  run:
    shell: bash
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_ARGUMENTS: --nologo -c ${{ inputs.configuration }}
  NUGET_GLOB_PATTERN: ${{ inputs.sources_folder }}/**/bin/${{ inputs.configuration }}/*.nupkg
jobs:
  nuget:
    name: Nuget
    runs-on: ${{ inputs.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.token || github.token }}
    - name: Parse Tag
      uses: dawidd6/action-get-tag@v1
      id: tag
    - name: Install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet_version }}
    - name: Restore
      run: dotnet restore ${{ inputs.solution_file }}
    - name: Build
      run: dotnet build ${{ inputs.solution_file }} --no-restore $DOTNET_ARGUMENTS -p:Version=${{ steps.tag.outputs.tag }}
    - name: Test
      run: dotnet test ${{ inputs.solution_file }} --no-build $DOTNET_ARGUMENTS
    - name: Pack
      run: dotnet pack ${{ inputs.solution_file }} --no-build $DOTNET_ARGUMENTS -p:Version=${{ steps.tag.outputs.tag }}
    - name: Push
      run: dotnet nuget push "$NUGET_GLOB_PATTERN" -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.nuget_token }}
