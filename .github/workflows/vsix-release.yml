name: VSIX / Release
# Inspired by: https://cezarypiatek.github.io/post/develop-vsextension-with-github-actions/
on:
  workflow_call:
    inputs:
      solution_file:
        required: true
        type: string
      project_folder:
        required: true
        type: string
      vsix_name:
        required: true
        type: string
      configuration:
        required: false
        type: string
        default: Release
      dotnet_version:
        required: false
        type: string
        default: ''
jobs:
  release:
    name: Release
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Parse Tag
      uses: dawidd6/action-get-tag@v1
      id: tag
    - name: Install MSBuild
      uses: microsoft/setup-msbuild@v1
    - name: Install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet_version }}
    - name: Restore
      run: dotnet restore ${{ inputs.solution_file }}
    - name: Set Version
      uses: cezarypiatek/VsixVersionAction@1.0
      with:
        version: ${{ steps.tag.outputs.tag }}
        vsix-manifest-file: ${{ inputs.project_folder }}/source.extension.vsixmanifest
    - name: Build
      run: msbuild ${{ inputs.solution_file }} -t:Build -p:Configuration=${{ inputs.configuration }} -v:minimal -nologo
      env: 
        DeployExtension: False
    - name: Test
      run: dotnet test ${{ inputs.solution_file }} -c ${{ inputs.configuration }} --nologo
    - name: Release
      uses: alexellis/upload-assets@0.3.0
      with:
        asset_paths: '["${{ inputs.project_folder }}/bin/${{ inputs.configuration }}/${{ inputs.vsix_name }}.vsix"]'
      env:
        GITHUB_TOKEN: ${{ github.token }}
